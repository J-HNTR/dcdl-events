name: Build calendar

on:
  push:
    paths:
      - "data/**"
      - ".github/workflows/build.yml"
  schedule:
    - cron: "0 * * * *" # hourly
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml python-dateutil ics

      - name: Build ICS
        run: |
          python - <<'PY'
          import os, sys, hashlib, yaml
          from datetime import datetime, timedelta, date, time
          from dateutil import parser, tz
          from ics import Calendar, Event

          TZ = tz.gettz("America/Toronto")
          HORIZON_DAYS = 120  # how far ahead to expand repeats

          def parse_dt(s):
            dt = parser.parse(s)
            if dt.tzinfo is None:
              return dt.replace(tzinfo=TZ)
            return dt

          repo_root = os.getcwd()
          data_path = os.path.join(repo_root, "data", "team_events.yaml")
          out_dir = os.path.join(repo_root, "docs")
          os.makedirs(out_dir, exist_ok=True)
          out_path = os.path.join(out_dir, "dc-dark-legion.ics")

          cal = Calendar()

          # --- Load team events (user-scheduled) ---
          team = []
          if os.path.isfile(data_path):
            with open(data_path, "r", encoding="utf-8") as f:
              y = yaml.safe_load(f) or {}
              team = list(y.get("team_events", []) or [])

          today = datetime.now(TZ).date()

          def add_event(title, start_dt, end_dt, description=None, uid_seed=None, location=None):
            e = Event()
            e.name = title
            e.begin = start_dt
            e.end = end_dt
            if description:
              e.description = description
            if location:
              e.location = location
            # stable-ish UID
            seed = uid_seed or f"{title}|{start_dt.isoformat()}|{end_dt.isoformat()}"
            e.uid = hashlib.md5(seed.encode("utf-8")).hexdigest() + "@dcdl-events"
            cal.events.add(e)

          # Expand team events, including daily repeats
          for te in team:
            title = te.get("title", "Untitled")
            desc = te.get("description")
            location = te.get("location")
            repeat = (te.get("repeat") or te.get("frequency") or "").strip().lower()

            if "start" in te and "end" in te:
              start0 = parse_dt(te["start"])
              end0 = parse_dt(te["end"])
            else:
              # optional support: duration (minutes) if end is not provided
              start0 = parse_dt(te["start"])
              dur_min = int(te.get("duration_minutes", 60))
              end0 = start0 + timedelta(minutes=dur_min)

            if repeat == "daily":
              # expand from max(today, start0.date()) forward
              anchor = max(today, start0.date())
              # align start on/after anchor
              delta_days = (anchor - start0.date()).days
              s = start0 + timedelta(days=max(0, delta_days))
              e = end0   + timedelta(days=max(0, delta_days))
              for i in range(HORIZON_DAYS):
                add_event(title, s + timedelta(days=i), e + timedelta(days=i), desc, uid_seed=f"{title}|daily|{(s+timedelta(days=i)).isoformat()}", location=location)
            else:
              add_event(title, start0, end0, desc, location=location)

          # (Optional) If you have a scraper for “DC Dark Heroes/Dark Legion” official events,
          # call it here and `add_event(...)` for those too.

          with open(out_path, "w", encoding="utf-8") as f:
            f.writelines(cal.serialize_iter())

          print(f"Wrote: {out_path}")
          PY

      - name: Commit & push if changed
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if [[ -n "$(git status --porcelain docs/dc-dark-legion.ics)" ]]; then
            git add docs/dc-dark-legion.ics
            git commit -m "Update calendar feed"
            git push
          else
            echo "No changes to commit."
          fi
